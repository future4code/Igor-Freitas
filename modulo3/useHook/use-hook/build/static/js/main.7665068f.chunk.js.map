{"version":3,"sources":["components/PokeCard.js","App.js","index.js"],"names":["PokeCard","props","useState","pokemon","setPokemon","pegaPokemon","pokeName","axios","get","then","response","data","catch","err","console","log","useEffect","name","weight","types","type","sprites","src","front_default","alt","App","pokeList","setPokeList","setPokeName","results","error","className","onChange","e","target","value","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAGe,SAASA,EAASC,GAAQ,IAAD,EACRC,mBAAS,IADD,mBAC/BC,EAD+B,KACtBC,EADsB,KAGhCC,EAAc,SAAAC,GAClBC,IACGC,IADH,4CAC4CF,IACzCG,MAAK,SAAAC,GACJN,EAAaM,EAASC,SAEvBC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAelB,OAXAG,qBAAU,WACRX,EAAYJ,EAAME,WACjB,IAEHa,qBAAU,WACLb,IAAYF,EAAME,SACnBE,EAAYJ,EAAME,WAEpB,CAACA,IAID,gCACE,4BAAIA,EAAQc,OACZ,8BAAId,EAAQe,OAAZ,SACCf,EAAQgB,OAAS,4BAAIhB,EAAQgB,MAAM,GAAGC,KAAKH,OAC3Cd,EAAQkB,SACP,qBAAKC,IAAKnB,EAAQkB,QAAQE,cAAeC,IAAKrB,EAAQc,U,MCQ/CQ,MApCf,WAAgB,IAAD,EACmBvB,mBAAS,IAD5B,mBACNwB,EADM,KACIC,EADJ,OAEmBzB,mBAAS,IAF5B,mBAENI,EAFM,KAEIsB,EAFJ,KAmBb,OAfAZ,qBAAU,WACRT,IACCC,IAAI,gDACJC,MAAK,SAACC,GACLiB,EAAYjB,EAASC,KAAKkB,YAE3BjB,OAAM,SAACkB,GACNhB,QAAQC,IAAIe,SASd,sBAAKC,UAAU,MAAf,UACE,yBAAQC,SANW,SAAAC,GACrBL,EAAaK,EAAEC,OAAOC,QAKpB,UACE,wBAAQA,MAAO,GAAf,oBACCT,EAASU,KAAI,SAACjC,GACb,OACE,wBAA2BgC,MAAOhC,EAAQc,KAA1C,SACGd,EAAQc,MADEd,EAAQc,YAM5BX,GAAY,cAACN,EAAD,CAAUG,QAASG,QChCpC+B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7665068f.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nexport default function PokeCard(props) {\r\n  const [pokemon, setPokemon] = useState({})\r\n \r\n  const pegaPokemon = pokeName => {\r\n    axios\r\n      .get(`https://pokeapi.co/api/v2/pokemon/${pokeName}`)\r\n      .then(response => {\r\n        setPokemon  (response.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    pegaPokemon(props.pokemon)\r\n  }, [])\r\n\r\n  useEffect(()=>{\r\n    if(pokemon !== props.pokemon)  {\r\n      pegaPokemon(props.pokemon)\r\n    }\r\n  },[pokemon])\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <p>{pokemon.name}</p>\r\n      <p>{pokemon.weight} Kg</p>\r\n      {pokemon.types && <p>{pokemon.types[0].type.name}</p>}\r\n      {pokemon.sprites && (\r\n        <img src={pokemon.sprites.front_default} alt={pokemon.name} />\r\n      )}\r\n    </div>\r\n  );\r\n\r\n}","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport PokeCard from \"./components/PokeCard\";\nimport './styles.css'\n\n\nfunction App() {\n  const [pokeList, setPokeList] = useState([])\n  const [pokeName, setPokeName] = useState('')\n\n  useEffect(()=>{\n    axios\n    .get('https://pokeapi.co/api/v2/pokemon/?limit=151')\n    .then((response)=>{\n      setPokeList(response.data.results)\n    })\n    .catch((error)=>{\n      console.log(error)\n    })\n  })\n\n  const changePokeName = e =>{\n    setPokeName (e.target.value)\n  }\n\n  return (\n    <div className='App'>\n      <select onChange={changePokeName}>\n        <option value={''}>Nenhum</option>\n        {pokeList.map((pokemon)=>{\n          return(\n            <option key={pokemon.name} value={pokemon.name}>\n              {pokemon.name}\n            </option>\n          )\n        })}\n      </select>\n    {pokeName && <PokeCard pokemon={pokeName}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}